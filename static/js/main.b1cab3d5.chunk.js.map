{"version":3,"sources":["components/Page/PageHeader.js","components/Section.js","components/Appbar.js","components/Skill/Skill.js","components/Skill/Skills.js","components/Item/ItemContent.js","components/Project/Projects.js","components/Project/Project.js","components/Item/Item.js","components/Item/Items.js","components/Page/PageContent.js","components/Page/PageFooter.js","data.js","components/Home.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","avatar","width","height","icons","color","palette","grey","fontSize","PageHeader","name","jobTitle","location","links","classes","resume","Grid","container","direction","alignItems","spacing","item","Avatar","alt","src","className","Typography","variant","align","justify","IconButton","href","target","root","Section","title","children","Divider","calculateScrollDistance","scrollTop","window","pageYOffset","windowHeight","innerHeight","totalDocScrollLength","Math","max","document","body","scrollHeight","documentElement","offsetHeight","clientHeight","floor","ColorLinearProgress","withStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","appbar","A400","Appbar","handleSwitchDarkMode","darkMode","useState","scrollProgress","setScrollProgress","useEffect","addEventListener","requestAnimationFrame","github","linkedIn","email","AppBar","onClick","value","position","top","getContrastText","background","default","bot","left","skill","Skill","description","percentage","CircularProgress","thickness","size","Skills","skills","map","index","key","summary","fontStyle","textAlign","listItem","chip","margin","padding","ItemContent","bulletPoints","mainTechnos","length","List","dense","detail","ListItem","techno","Chip","label","Projects","projects","Container","details","Project","dates","expanded","setExpanded","Card","CardHeader","logo","adress","subheader","action","Collapse","in","timeout","unmountOnExit","CardContent","Item","cardContent","Items","itemDetail","PageContent","aboutText","jobs","studies","maxWidth","PageFooter","Date","getFullYear","personnalInformations","header","content","footer","Home","setDarkMode","ThemeProvider","createMuiTheme","typography","type","CssBaseline","disableGutters","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1cab3d5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Grid, Typography, Avatar, IconButton } from '@material-ui/core';\r\n\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    width: '150px',\r\n    height: '150px',\r\n  },\r\n  icons: {\r\n    color: theme.palette.grey[50],\r\n    fontSize: 24,\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ name, jobTitle, location, links }) => {\r\n  const classes = useStyles();\r\n  const { resume } = links;\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n      <Grid item>\r\n        <Avatar\r\n          alt=\"Aleksandar's profile pic\"\r\n          src=\"./profilePic.png\"\r\n          className={classes.avatar}\r\n        />\r\n      </Grid>\r\n      <Grid item container direction=\"column\" alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            {name}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h5\" align=\"center\">\r\n            {jobTitle}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\">\r\n          <Grid item>\r\n            <RoomIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              {location}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>\r\n        <IconButton href={resume} target=\"_blank\">\r\n          <InsertDriveFileIcon classes={{ root: classes.icons }} />\r\n          <Typography classes={{ root: classes.icons }}>CV</Typography>\r\n        </IconButton>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\n\r\nimport { Grid, Divider, Typography } from '@material-ui/core';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Grid container direction=\"column\" spacing={2}>\r\n    <Grid item>\r\n      <Typography variant=\"h4\">{title}</Typography>\r\n    </Grid>\r\n    <Grid item>\r\n      <Divider />\r\n    </Grid>\r\n    <Grid item>{children}</Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default Section;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { IconButton, Grid, AppBar, LinearProgress } from '@material-ui/core';\r\n\r\nimport LinkedInSharpIcon from '@material-ui/icons/LinkedIn';\r\nimport GithubSharpIcon from '@material-ui/icons/GitHub';\r\nimport Brightness7SharpIcon from '@material-ui/icons/Brightness7Sharp';\r\nimport Brightness4SharpIcon from '@material-ui/icons/Brightness4Sharp';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nconst getDocHeight = () => {\r\n  return Math.max(\r\n    document.body.scrollHeight,\r\n    document.documentElement.scrollHeight,\r\n    document.body.offsetHeight,\r\n    document.documentElement.offsetHeight,\r\n    document.body.clientHeight,\r\n    document.documentElement.clientHeight\r\n  );\r\n};\r\n\r\nconst calculateScrollDistance = () => {\r\n  const scrollTop = window.pageYOffset;\r\n  const windowHeight = window.innerHeight;\r\n  const docHeight = getDocHeight();\r\n\r\n  const totalDocScrollLength = docHeight - windowHeight;\r\n  const scrollPosition = Math.floor((scrollTop / totalDocScrollLength) * 100);\r\n  return scrollPosition;\r\n};\r\n\r\nconst ColorLinearProgress = withStyles({\r\n  root: {\r\n    height: 7,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: '#303030',\r\n  },\r\n  barColorPrimary: {\r\n    backgroundColor: '#fafafa',\r\n  },\r\n})(LinearProgress);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appbar: {\r\n    backgroundColor: theme.palette.grey.A400,\r\n  },\r\n  icons: {\r\n    color: theme.palette.grey[50],\r\n    fontSize: 35,\r\n  },\r\n}));\r\n\r\nconst Appbar = ({ links, handleSwitchDarkMode, darkMode }) => {\r\n  const classes = useStyles();\r\n\r\n  const [scrollProgress, setScrollProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', () => {\r\n      requestAnimationFrame(() => {\r\n        // Calculates the scroll distance\r\n        setScrollProgress(calculateScrollDistance());\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const { github, linkedIn, email } = links;\r\n\r\n  return (\r\n    <AppBar classes={{ root: classes.appbar }}>\r\n      <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\r\n        {linkedIn && (\r\n          <Grid item>\r\n            <IconButton href={linkedIn} target=\"_blank\">\r\n              <LinkedInSharpIcon classes={{ root: classes.icons }} />\r\n            </IconButton>\r\n          </Grid>\r\n        )}\r\n        {github && (\r\n          <Grid item>\r\n            <IconButton href={github} target=\"_blank\">\r\n              <GithubSharpIcon classes={{ root: classes.icons }} />\r\n            </IconButton>\r\n          </Grid>\r\n        )}\r\n        {email && (\r\n          <Grid item>\r\n            <IconButton href={`mailto:${email}`} target=\"_blank\">\r\n              <EmailIcon classes={{ root: classes.icons }} />\r\n            </IconButton>\r\n          </Grid>\r\n        )}\r\n        <Grid item>\r\n          <IconButton onClick={handleSwitchDarkMode}>\r\n            {darkMode ? (\r\n              <Brightness7SharpIcon classes={{ root: classes.icons }} />\r\n            ) : (\r\n              <Brightness4SharpIcon classes={{ root: classes.icons }} />\r\n            )}\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <ColorLinearProgress\r\n        variant=\"determinate\"\r\n        value={scrollProgress}\r\n        color=\"primary\"\r\n      />\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Appbar;\r\n","import React from 'react';\nimport { CircularProgress, Typography, Grid } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n  top: {\n    color: theme.palette.getContrastText(theme.palette.background.default),\n  },\n  bot: {\n    color: theme.palette.grey[600],\n    position: 'absolute',\n    left: 5,\n    top: 5,\n  },\n  skill: {\n    width: '200px',\n  },\n}));\n\nconst Skill = ({ name, description, percentage }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      classes={{ root: classes.skill }}>\n      <Grid item classes={{ root: classes.root }}>\n        <CircularProgress\n          variant=\"static\"\n          value={100}\n          thickness={3}\n          size={90}\n          className={classes.bot}\n        />\n        <CircularProgress\n          variant=\"static\"\n          value={percentage}\n          thickness={7}\n          size={100}\n          className={classes.top}\n        />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h5\" align=\"center\">\n          {name}\n        </Typography>\n      </Grid>\n      {description && (\n        <Grid item>\n          <Typography variant=\"body1\" align=\"center\">\n            {description}\n          </Typography>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default Skill;\n","import React from 'react';\n\nimport { Skill } from '.';\nimport { Grid } from '@material-ui/core';\n\nconst Skills = ({ skills }) => (\n  <Grid container direction=\"row\" justify=\"center\" spacing={4}>\n    {skills.map((skill, index) => (\n      <Grid item key={index}>\n        <Skill {...skill} />\n      </Grid>\n    ))}\n  </Grid>\n);\n\nexport default Skills;\n","import React from 'react';\r\n\r\nimport { List, ListItem, Chip, Grid, Typography } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  summary: {\r\n    fontStyle: 'italic',\r\n    textAlign: 'justify',\r\n  },\r\n  description: {\r\n    textAlign: 'justify',\r\n  },\r\n  listItem: {\r\n    textAlign: 'justify',\r\n  },\r\n  chip: {\r\n    backgroundColor: '#212121',\r\n    color: '#fafafa',\r\n    margin: '2px',\r\n    padding: '2px',\r\n  },\r\n}));\r\n\r\nconst ItemContent = ({ summary, description, bulletPoints, mainTechnos }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container direction=\"column\" spacing={2}>\r\n      {summary && (\r\n        <Grid item>\r\n          <Typography variant=\"body1\" classes={{ root: classes.summary }}>\r\n            {summary}\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n      {description && (\r\n        <Grid item>\r\n          <Typography variant=\"body1\" classes={{ root: classes.description }}>\r\n            {description}\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n      {bulletPoints && bulletPoints.length > 0 && (\r\n        <Grid item>\r\n          <List dense>\r\n            {bulletPoints.map((detail, index) => (\r\n              <ListItem key={index} classes={{ root: classes.listItem }}>\r\n                <Typography variant=\"body1\">{detail}</Typography>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      )}\r\n      {mainTechnos && (\r\n        <Grid item container direction=\"row\">\r\n          {mainTechnos.map((techno, index) => (\r\n            <Grid item key={index}>\r\n              <Chip\r\n                size=\"small\"\r\n                label={techno}\r\n                classes={{ root: classes.chip }}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ItemContent;\r\n","import React from 'react';\r\n\r\nimport { Project } from '.';\r\n\r\nimport { Grid, Container, Typography } from '@material-ui/core';\r\n\r\nconst Projects = ({ projects }) => (\r\n  <Container>\r\n    <Grid container direction=\"column\" justify=\"center\" spacing={1}>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">Projet(s)</Typography>\r\n      </Grid>\r\n      {projects.map((details, index) => (\r\n        <Grid item key={index}>\r\n          <Project {...details} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  </Container>\r\n);\r\n\r\nexport default Projects;\r\n","import React, { useState } from 'react';\r\n\r\nimport { ItemContent } from '../Item';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  Avatar,\r\n  IconButton,\r\n  Divider,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst Project = ({\r\n  location,\r\n  dates,\r\n  title,\r\n  summary = '',\r\n  description = '',\r\n  bulletPoints = [],\r\n  mainTechnos = [],\r\n}) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={<Avatar src={location.logo} />}\r\n        title={\r\n          <Typography variant=\"subtitle1\">{`${location.name} | ${location.adress}`}</Typography>\r\n        }\r\n        subheader={`${title} / ${dates}`}\r\n        action={\r\n          <IconButton onClick={handleExpandClick}>\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n        }\r\n      />\r\n      <Divider variant=\"fullWidth\" />\r\n\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <ItemContent\r\n            summary={summary}\r\n            description={description}\r\n            bulletPoints={bulletPoints}\r\n            mainTechnos={mainTechnos}\r\n          />\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React from 'react';\r\n\r\nimport { ItemContent } from '.';\r\nimport { Projects } from '../Project';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Avatar,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nconst Item = ({\r\n  location,\r\n  dates,\r\n  title,\r\n  summary,\r\n  description,\r\n  bulletPoints,\r\n  mainTechnos,\r\n  projects,\r\n}) => {\r\n  let cardContent;\r\n  if (summary || description || bulletPoints || mainTechnos || projects) {\r\n    cardContent = (\r\n      <CardContent>\r\n        <ItemContent\r\n          summary={summary}\r\n          description={description}\r\n          bulletPoints={bulletPoints}\r\n          mainTechnos={mainTechnos}\r\n        />\r\n\r\n        {projects && projects.length > 0 && <Projects projects={projects} />}\r\n      </CardContent>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={<Avatar src={location.logo} />}\r\n        title={<Typography variant=\"h5\">{location.name}</Typography>}\r\n        subheader={`${title} / ${dates}`}\r\n      />\r\n      <Divider variant=\"fullWidth\" />\r\n      {cardContent}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\n\r\nimport { Item } from '.';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst Items = ({ details }) => (\r\n  <Grid container direction=\"column\" spacing={3}>\r\n    {details.map((itemDetail, index) => (\r\n      <Grid item key={index}>\r\n        <Item {...itemDetail} />\r\n      </Grid>\r\n    ))}\r\n  </Grid>\r\n);\r\n\r\nexport default Items;\r\n","import React from 'react';\r\n\r\nimport { Section } from '..';\r\nimport { Skills } from '../Skill';\r\nimport { Items } from '../Item';\r\n\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\n\r\nconst PageContent = ({ aboutText, jobs, studies, skills }) => (\r\n  <Container maxWidth=\"md\">\r\n    <Grid container direction=\"column\" spacing={7}>\r\n      <Grid item>\r\n        <Section title=\"A propos\">\r\n          <Typography align=\"justify\" variant=\"body1\">\r\n            {aboutText}\r\n          </Typography>\r\n        </Section>\r\n      </Grid>\r\n      <Grid item>\r\n        <Section title=\"Compétences\">\r\n          <Skills skills={skills} />\r\n        </Section>\r\n      </Grid>\r\n      <Grid item>\r\n        <Section title=\"Experiences\">\r\n          <Items details={jobs} />\r\n        </Section>\r\n      </Grid>\r\n      <Grid item>\r\n        <Section title=\"Formations\">\r\n          <Items details={studies} />\r\n        </Section>\r\n      </Grid>\r\n    </Grid>\r\n  </Container>\r\n);\r\n\r\nexport default PageContent;\r\n","import React from 'react';\r\n\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst PageFooter = () => (\r\n  <Grid container justify=\"center\" alignItems=\"center\">\r\n    <Grid item>\r\n      <Typography variant=\"body1\" justify=\"center\">\r\n        Copyright © {new Date().getFullYear()} - Aleksandar Timotijevic\r\n      </Typography>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default PageFooter;\r\n","export const aboutText = `Passionné par l'informatique depuis toujours, c'est logiquement que je me suis tourné vers des études de Programmation.\r\nCela m'a permis d'acquérir un esprit logique et une capacité d'analyse, mais aussi les bases dans tous les domaines de l'Informatique tels que la gestion de projets, les réseaux, les bases de données, la sécurité et le génie logiciel.\r\nAprès un stage de fin d’études réussi, l’idée de mettre à profit mes compétences acquises à l’Université au sein de projets concrets m’a motivé à me lancer dans le monde professionnel.\r\nLes un an au sein de Talan Labs m’ont permis d’acquérir une solide expérience dans l’artisanat logiciel, notamment en participant à un projet d’envergure pour le compte de la SNCF Gares & Connexions.`;\r\n\r\nexport const personnalInformations = {\r\n  name: 'Aleksandar Timotijevic',\r\n  jobTitle: 'Développeur Fullstack Javascript',\r\n  location: 'Paris, France',\r\n  links: {\r\n    email: 'contact@alekstimo.fr',\r\n    linkedIn: 'https://linkedin.com/in/aleks-timo',\r\n    github: 'https://github.com/PlanAborted',\r\n    resume: './Resume.pdf',\r\n  },\r\n};\r\n\r\nexport const skills = [\r\n  {\r\n    name: 'Javascript',\r\n    description: 'NodeJS (Express, Jest), ReactJS',\r\n    percentage: 90,\r\n  },\r\n  {\r\n    name: 'Bases de Données',\r\n    description: 'MySQL, PostgreSQL, MongoDB, GraphQL, InfluxDB',\r\n    percentage: 80,\r\n  },\r\n  {\r\n    name: 'Software Craftsmanship',\r\n    description: 'Agile (Scrum), XP, TDD, Clean Code',\r\n    percentage: 60,\r\n  },\r\n  { name: 'CI/CD', description: 'Git, Docker, Kubernetes', percentage: 60 },\r\n  { name: 'Architecture', description: 'Microservices', percentage: 60 },\r\n  { name: 'Java', percentage: 60 },\r\n];\r\n\r\nexport const jobs = [\r\n  {\r\n    location: {\r\n      logo: './logoTalanLabs.png',\r\n      name: 'Talan Labs',\r\n      adress: 'Paris, France',\r\n    },\r\n    dates: 'Sep. 2018 - Déc. 2019',\r\n    title: 'Développeur Fullstack Javascript',\r\n    summary: '',\r\n    description: `Montée en compétences`,\r\n    bulletPoints: [\r\n      `Javascript (NodeJS, ReactJS, ES6)`,\r\n      `Artisanat logiciel (Extreme Programming, Mob / Pair Programming, Tests Driven Development, Code Review, Git Workflow, Clean Code, Clean Architecture)`,\r\n      `Agilité (Scrum, Kanban)`,\r\n      `Intégration et Déploiement continu`,\r\n    ],\r\n    mainTechnos: [\r\n      'NodeJS',\r\n      'ReactJS',\r\n      'ES6',\r\n      'XP',\r\n      'TDD',\r\n      'Git',\r\n      'Scrum',\r\n      'CI/CD',\r\n    ],\r\n    projects: [\r\n      {\r\n        location: {\r\n          logo: './logoSncf.png',\r\n          name: 'SNCF Gares & Connexions (via Talan Labs)',\r\n          adress: 'Paris, France',\r\n        },\r\n        dates: 'Nov. 2018 - Déc. 2019',\r\n        title: 'Développeur Fullstack Javascript',\r\n        summary: `Dans le but de tester et monitorer une application en cours de développement en mode boîte grise, la SNCF Gares et Connexions souhaitait développer un outil de test afin de vérifier les performances, la montée en charge et la cohérence entre les données envoyées en entrée et les données reçues en sortie de cette dernière.`,\r\n        description: '',\r\n        bulletPoints: [\r\n          `Création de modules conteneurisés en entrée et en sortie de l’application (NodeJS, Docker, API REST, WebSockets)`,\r\n          `Création d’une interface permettant le pilotage l’outil de test (ReactJS, Swagger)`,\r\n          `Mise en place d’une base de données (InfluxDB)`,\r\n          `Mise en place d’un tableau de bord pour monitorer les performances de l’application testée (Grafana)`,\r\n          `Mise en place d’un outil pour valider la montée en charge de notre solution (Gatling)`,\r\n          `Déploiement, gestion (montée en charge) et monitoring de notre outil déployé sur un cluster Kubernetes (Helm, kubectl, DataDog)`,\r\n        ],\r\n        mainTechnos: [\r\n          'NodeJS',\r\n          'ReactJS',\r\n          'ES6',\r\n          'InfluxDB',\r\n          'Grafana',\r\n          'Gatling',\r\n          'Docker',\r\n          'Kubernetes',\r\n          'Helm',\r\n          'TDD',\r\n          'Git',\r\n          'Scrum',\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    location: {\r\n      logo: './logoAcsi.png',\r\n      name: 'ACSI Multimedia',\r\n      adress: 'Saint-Gratien, France',\r\n    },\r\n    dates: 'Fév. 2018 - Mai 2019',\r\n    title: 'Développeur Stagiaire Java',\r\n    summary: `En tant que développeur stagiaire, mon rôle à été de conçevoir et d'implémenter un logiciel pour un client de l'entreprise avec le soutien de mon maître de stage.`,\r\n    description: ``,\r\n    bulletPoints: [],\r\n    mainTechnos: [\r\n      'JavaEE',\r\n      'Glassfish',\r\n      'MySQL',\r\n      'Microsoft Access',\r\n      'Jax WS',\r\n      'SOAP',\r\n      'XML',\r\n      'PDF',\r\n    ],\r\n    projects: [\r\n      {\r\n        location: {\r\n          logo: './logoAtcn.png',\r\n          name: 'SAS ATCN',\r\n          adress: 'Saint-Gratien, France',\r\n        },\r\n        dates: 'Fév. 2018 - Mai 2019',\r\n        title: 'Développeur Stagiaire Java',\r\n        summary: '',\r\n        description: '',\r\n        bulletPoints: [\r\n          `Analyse et définition des besoins du Client final`,\r\n          `Mise en place et configuration d'une Base de Données MySQL : MySQL WorkBench`,\r\n          `Mise en place d'un Web Service : Serveur Glassfish 5, Back-End JavaEE`,\r\n          `Migration d'une Base de Données ACCESS 97 vers MySQL : Export de la BDD sous Excel, Création de scripts d'importation dans la nouvelle BDD (Parsing Excel - Apache POI, Validation des données, Import MySQL par Web Service)`,\r\n          `Mise en place d'une interface graphique : Front-End JavaFX, Système de comptes utilisateurs (Cryptage et stockage des mots de passe dans la BDD, Système de Tokens utilisateurs)`,\r\n          `Configuration de la communication Front Back (Client Serveur) : Jax-WS, SOAP-XML`,\r\n          `Mise en place de la création de documents : Fiches de Suivi de Commandes, Bons de Livraisons, etc. (Remplissage de formulaires PDF - API iText)`,\r\n        ],\r\n        mainTechnos: [\r\n          'JavaEE',\r\n          'Glassfish',\r\n          'MySQL',\r\n          'Microsoft Access',\r\n          'Jax WS',\r\n          'SOAP',\r\n          'XML',\r\n          'PDF',\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const studies = [\r\n  {\r\n    location: {\r\n      logo: './logoDescartes.png',\r\n      name: 'Université Paris 5 Descartes',\r\n      adress: 'Paris, France',\r\n    },\r\n    dates: '2012 - 2018',\r\n    title:\r\n      'Licence MIAGE (Méthodes Informatiques Appliquées à la Gestion des Entreprises)',\r\n    description: 'Compétences principales acquises',\r\n    bulletPoints: [\r\n      `Langages de programmation : C, Java, C#, Web (HTML, CSS, JavaScript, PHP)`,\r\n      `Bases de données : PostgreSQL`,\r\n      `Ingénierie Logicielle`,\r\n      `Gestion de projets`,\r\n      `Travail en équipe`,\r\n    ],\r\n    mainTechnos: [\r\n      'Java',\r\n      'C',\r\n      'C#',\r\n      'Javascript',\r\n      'HTML',\r\n      'CSS',\r\n      'PHP',\r\n      'PostgreSQL',\r\n    ],\r\n    projects: [\r\n      {\r\n        location: {\r\n          logo: './logoDescartes.png',\r\n          name: 'Université Paris 5 Descartes',\r\n          adress: 'Paris, France',\r\n        },\r\n        dates: 'Jan. 2017 - Mai 2017',\r\n        title: `Développement d'un jeu sur Android (en équipe de 4)`,\r\n        summary: '',\r\n        description: '',\r\n        bulletPoints: [\r\n          `Analyse et définition des besoins du client`,\r\n          `Etude de marché`,\r\n          `Maquettage de l'application`,\r\n          `Rédaction de la documentation technique : Cahier des Charges, Plan de Développement, Plan de Tests, Cahier de Recette, Guide utilisateurs`,\r\n          `Planification et mise en place du projet : RedMine (SVN, Gantt, Dépôt de code)`,\r\n          `Développement de la solution logicielle : Android Studio (SDK), Java : Mise en place de la logique de jeu`,\r\n        ],\r\n        mainTechnos: ['Java', 'Android Studio', 'SVN', 'Redmine', 'Gantt'],\r\n      },\r\n      {\r\n        location: {\r\n          logo: './logoDescartes.png',\r\n          name: 'Université Paris 5 Descartes',\r\n          adress: 'Paris, France',\r\n        },\r\n        dates: 'Jan. 2016 - Mai 2016',\r\n        title: `Développement d'un Jeu de Dames sur PC (en équipe de 4)`,\r\n        summary: '',\r\n        description: '',\r\n        bulletPoints: [\r\n          `Analyse et définition des besoins du client`,\r\n          `Rédaction de la documentation technique : Cahier des Charges, Plan de Développement, Plan de Tests, Cahier de Recette, Guide utilisateurs`,\r\n          `Planification et mise en place du projet : RedMine (SVN, Gantt, Dépôt de code)`,\r\n          `Développement de la solution logicielle : Unity3D : Génération plateau de jeu et pièces, C# : Mise en place de la logique de jeu, Intelligence Artificielle : Algorithme Alpha-Beta, Jeu contre l'ordinateur avec plusieurs niveaux de difficultés`,\r\n        ],\r\n        mainTechnos: [\r\n          'C#',\r\n          'Unity3D',\r\n          'Intelligence Artificielle',\r\n          'SVN',\r\n          'Redmine',\r\n          'Gantt',\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    location: {\r\n      logo: '',\r\n      name: 'Lycée Marcel Cachin',\r\n      adress: 'Saint-Ouen, France',\r\n    },\r\n    dates: '2012',\r\n    title: 'Baccalauréat S',\r\n    description: '',\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\n\r\nimport { PageHeader, PageContent, PageFooter } from './Page';\r\nimport { Appbar } from '.';\r\n\r\nimport {\r\n  aboutText,\r\n  jobs,\r\n  studies,\r\n  skills,\r\n  personnalInformations,\r\n} from '../data';\r\nimport {\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Container,\r\n  CssBaseline,\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    backgroundColor: theme.palette.grey.A400,\r\n    color: theme.palette.grey[50],\r\n    padding: theme.spacing(15, 5, 6, 5),\r\n  },\r\n  content: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.grey.A400,\r\n    color: theme.palette.grey[50],\r\n    padding: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  const handleSwitchDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n  return (\r\n    <ThemeProvider\r\n      theme={createMuiTheme({\r\n        typography: {\r\n          fontSize: 12,\r\n        },\r\n        palette: {\r\n          type: darkMode ? 'dark' : 'light',\r\n        },\r\n      })}>\r\n      <CssBaseline />\r\n      <Appbar\r\n        links={personnalInformations.links}\r\n        handleSwitchDarkMode={handleSwitchDarkMode}\r\n        darkMode={darkMode}\r\n      />\r\n      <Container\r\n        maxWidth={false}\r\n        disableGutters\r\n        classes={{ root: classes.header }}>\r\n        <PageHeader {...personnalInformations} />\r\n      </Container>\r\n      <Container\r\n        maxWidth={false}\r\n        disableGutters\r\n        classes={{ root: classes.content }}>\r\n        <PageContent\r\n          aboutText={aboutText}\r\n          jobs={jobs}\r\n          studies={studies}\r\n          skills={skills}\r\n        />\r\n      </Container>\r\n      <Container\r\n        maxWidth={false}\r\n        disableGutters\r\n        classes={{ root: classes.footer }}>\r\n        <PageFooter />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Home from './components/Home';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Home />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
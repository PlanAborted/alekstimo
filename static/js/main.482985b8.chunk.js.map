{"version":3,"sources":["components/Header.js","components/Footer.js","components/About.js","components/Experience.js","components/Education.js","components/Items.js","components/Item.js","components/Projects.js","components/Project.js","data.js","components/Home.js","serviceWorker.js","index.js"],"names":["Header","name","jobTitle","linkedIn","email","github","Container","maxWidth","Grid","container","direction","justify","alignItems","style","color","height","item","src","IconButton","href","target","fontSize","fontWeight","Footer","About","text","Divider","backgroundColor","Experience","experiences","details","Education","education","Items","map","itemDetail","index","key","Item","location","dates","title","summary","description","bulletPoints","mainTechnos","projects","Paper","elevation","padding","margin","square","spacing","logo","Avatar","fontStyle","adress","variant","textAlign","length","List","dense","detail","ListItem","techno","Chip","size","label","Projects","Project","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","ExpansionPanelDetails","personnalInformations","jobs","studies","Home","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.482985b8.chunk.js","sourcesContent":["import React from 'react';\n\nimport { IconButton, Grid, Container, Avatar } from '@material-ui/core';\n\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GithubIcon from '@material-ui/icons/GitHub';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\n\nconst Header = ({ name, jobTitle, email, linkedIn, github }) => (\n  <Container maxWidth=\"lg\">\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{\n        color: '#ffffff',\n        height: '450px',\n      }}>\n      <Grid item>\n        <img src=\"./profilePic.png\" />\n      </Grid>\n      <Grid item>\n        <h1>{name}</h1>\n      </Grid>\n      <Grid item>\n        <h2>{jobTitle}</h2>\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"row\" alignItems=\"center\">\n          <Grid item>\n            <IconButton href={linkedIn} target=\"_blank\">\n              <LinkedInIcon fontSize=\"large\" style={{ color: '#ffffff' }} />\n            </IconButton>\n          </Grid>\n          <Grid item>\n            <IconButton href={github} target=\"_blank\">\n              <GithubIcon fontSize=\"large\" style={{ color: '#ffffff' }} />\n            </IconButton>\n          </Grid>\n          <Grid item>\n            <IconButton\n              href=\"./Resume.pdf\"\n              target=\"_blank\"\n              style={{\n                color: '#ffffff',\n                fontSize: '24px',\n                fontWeight: 'bold',\n              }}>\n              <InsertDriveFileIcon fontSize=\"large\" />\n              CV\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  </Container>\n);\n\nexport default Header;\n","import React from 'react';\n\nimport { Container, Grid } from '@material-ui/core';\n\nconst Footer = () => (\n  <Container maxWidth=\"lg\">\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ height: '100px', color: '#ffffff' }}>\n      Aleksandar Timotijevic\n    </Grid>\n  </Container>\n);\n\nexport default Footer;\n","import React from 'react';\n\nimport { Container, Divider, Grid } from '@material-ui/core';\n\nconst About = ({ text }) => (\n  <Container maxWidth=\"md\">\n    <h2>A propos</h2>\n    <Divider style={{ backgroundColor: '#ffffff' }} />\n    <p>{text}</p>\n  </Container>\n);\n\nexport default About;\n","import React from 'react';\n\nimport { Items } from '.';\n\nimport { Container, Divider } from '@material-ui/core';\n\nconst Experience = ({ experiences }) => (\n  <Container maxWidth=\"md\">\n    <h2>Experiences</h2>\n    <Items details={experiences} />\n  </Container>\n);\n\nexport default Experience;\n","import React from 'react';\n\nimport { Items } from '.';\n\nimport { Container } from '@material-ui/core';\n\nconst Education = ({ education }) => (\n  <Container maxWidth=\"md\">\n    <h2>Formation</h2>\n    <Items details={education} />\n  </Container>\n);\n\nexport default Education;\n","import React from 'react';\n\nimport { Item } from './';\n\nimport { Grid, Container } from '@material-ui/core';\n\nconst Items = ({ details }) => (\n  <Grid container direction=\"column\" justify=\"space-around\">\n    {details.map((itemDetail, index) => (\n      <Item {...itemDetail} key={index} />\n    ))}\n  </Grid>\n);\n\nexport default Items;\n","import React from 'react';\n\nimport { Projects } from './';\n\nimport {\n  Paper,\n  Grid,\n  Divider,\n  List,\n  ListItem,\n  Chip,\n  Container,\n  Avatar,\n} from '@material-ui/core';\n\nconst Item = ({\n  location,\n  dates,\n  title,\n  summary,\n  description,\n  bulletPoints,\n  mainTechnos,\n  projects,\n}) => (\n  <Paper\n    elevation={4}\n    style={{\n      padding: '10px 20px',\n      margin: '10px 0px',\n    }}\n    square>\n    <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n      <Grid item>\n        <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n          <Grid item>{location.logo && <Avatar src={location.logo} />}</Grid>\n          <Grid item>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"space-between\"\n              style={{\n                padding: '0px 0px 15px 0px',\n              }}>\n              <Grid item>\n                <span style={{ fontWeight: 'bold', fontSize: '18px' }}>\n                  {location.name}\n                </span>\n              </Grid>\n              <Grid item>\n                <Grid container direction=\"row\" justify=\"space-between\">\n                  <Grid item>\n                    <span style={{ fontStyle: 'italic' }}>\n                      {location.adress}\n                    </span>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <span>{title}</span>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <span>{dates}</span>\n      </Grid>\n    </Grid>\n    <Divider variant=\"fullWidth\" />\n    <Container>\n      {summary && (\n        <p\n          style={{\n            textAlign: 'justify',\n            fontStyle: 'italic',\n            padding: '5px 0px',\n          }}>\n          {summary}\n        </p>\n      )}\n      {description && (\n        <p style={{ textAlign: 'justify', margin: '10px 0px' }}>\n          {description}\n        </p>\n      )}\n      {bulletPoints && bulletPoints.length > 0 && (\n        <List dense>\n          {bulletPoints.map((detail, index) => (\n            <ListItem style={{ textAlign: 'justify' }} key={index}>\n              {detail}\n            </ListItem>\n          ))}\n        </List>\n      )}\n      {mainTechnos &&\n        mainTechnos.map((techno) => (\n          <Chip\n            size=\"small\"\n            label={techno}\n            style={{\n              margin: '2px 2px',\n              backgroundColor: '#212121',\n              color: '#ffffff',\n            }}\n          />\n        ))}\n    </Container>\n    {projects && projects.length > 0 && <Projects projects={projects} />}\n  </Paper>\n);\n\nexport default Item;\n","import React from 'react';\n\nimport { Project, Item } from './';\n\nimport { Grid, Container } from '@material-ui/core';\n\nconst Projects = ({ projects }) => (\n  <Container>\n    <h4>Projet(s)</h4>\n    <Grid container direction=\"column\" justify=\"space-around\">\n      {projects.map((details, index) => (\n        <Project {...details} key={index} />\n      ))}\n    </Grid>\n  </Container>\n);\n\nexport default Projects;\n","import React from 'react';\n\nimport {\n  Avatar,\n  Chip,\n  Paper,\n  Grid,\n  Divider,\n  List,\n  ListItem,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n} from '@material-ui/core';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst Project = ({\n  location,\n  dates,\n  title,\n  summary = '',\n  description,\n  bulletPoints = [],\n  mainTechnos = [],\n}) => (\n  <ExpansionPanel>\n    <ExpansionPanelSummary\n      expandIcon={<ExpandMoreIcon />}\n      aria-controls=\"panel1a-content\"\n      id=\"panel1a-header\">\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"space-between\">\n        <Grid item>\n          <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n            <Grid item>{location.logo && <Avatar src={location.logo} />}</Grid>\n            <Grid item>\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"space-between\"\n                style={{\n                  padding: '0px 0px 15px 0px',\n                }}>\n                <Grid item>\n                  <span style={{ fontWeight: 'bold', fontSize: '18px' }}>\n                    {location.name}\n                  </span>\n                </Grid>\n                <Grid item>\n                  <Grid container direction=\"row\" justify=\"space-between\">\n                    <Grid item>\n                      <span style={{ fontStyle: 'italic' }}>\n                        {location.adress}\n                      </span>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <span>{title}</span>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <span>{dates}</span>\n        </Grid>\n      </Grid>\n    </ExpansionPanelSummary>\n\n    <ExpansionPanelDetails>\n      <Grid container direction=\"column\">\n        {summary && (\n          <p\n            style={{\n              textAlign: 'justify',\n              fontStyle: 'italic',\n              padding: '10px 20px',\n            }}>\n            {summary}\n          </p>\n        )}\n        {description && (\n          <p\n            style={{\n              textAlign: 'justify',\n              margin: '30px 20px',\n            }}>\n            {description}\n          </p>\n        )}\n        {bulletPoints && bulletPoints.length > 0 && (\n          <List dense>\n            {bulletPoints.map((detail, index) => (\n              <ListItem\n                style={{\n                  textAlign: 'justify',\n                }}\n                key={index}>\n                {detail}\n              </ListItem>\n            ))}\n          </List>\n        )}\n        <Grid container direction=\"row\">\n          {mainTechnos &&\n            mainTechnos.map((techno) => (\n              <Chip\n                size=\"small\"\n                label={techno}\n                style={{\n                  margin: '2px 2px',\n                  backgroundColor: '#212121',\n                  color: '#ffffff',\n                }}\n              />\n            ))}\n        </Grid>\n      </Grid>\n    </ExpansionPanelDetails>\n  </ExpansionPanel>\n);\n\nexport default Project;\n","export const aboutText = `Passionné par l'informatique depuis toujours, c'est logiquement que je me suis tourné vers des études de Programmation.\nCela m'a permis d'acquérir un esprit logique et une capacité d'analyse, mais aussi les bases dans tous les domaines de l'Informatique tels que la gestion de projets, les réseaux, les bases de données, la sécurité et le génie logiciel.\nAprès un stage de fin d’études réussi, l’idée de mettre à profit mes compétences acquises à l’Université au sein de projets concrets m’a motivé à me lancer dans le monde professionnel.\nLes un an au sein de Talan Labs m’ont permis d’acquérir une solide expérience dans l’artisanat logiciel, notamment en participant à un projet d’envergure pour le compte de la SNCF Gares & Connexions.`;\n\nexport const personnalInformations = {\n  name: 'Aleksandar Timotijevic',\n  jobTitle: 'Développeur Fullstack Javascript',\n  email: 'contact@alekstimo.fr',\n  linkedIn: 'https://linkedin.com/in/aleks-timo',\n  github: 'https://github.com/PlanAborted',\n};\n\nexport const jobs = [\n  {\n    location: {\n      logo: './logoTalanLabs.png',\n      name: 'Talan Labs',\n      adress: 'Paris, France',\n    },\n    dates: 'Sep. 2018 - Déc. 2019',\n    title: 'Développeur Fullstack Javascript',\n    summary: '',\n    description: `Montée en compétences`,\n    bulletPoints: [\n      `Javascript (NodeJS, ReactJS, ES6)`,\n      `Artisanat logiciel (Extreme Programming, Mob / Pair Programming, Tests Driven Development, Code Review, Git Workflow, Clean Code, Clean Architecture)`,\n      `Agilité (Scrum, Kanban)`,\n      `Intégration et Déploiement continu`,\n    ],\n    mainTechnos: [\n      'NodeJS',\n      'ReactJS',\n      'ES6',\n      'XP',\n      'TDD',\n      'Git',\n      'Scrum',\n      'CI/CD',\n    ],\n    projects: [\n      {\n        location: {\n          logo: './logoSncf.png',\n          name: 'SNCF Gares & Connexions (via Talan Labs)',\n          adress: 'Paris, France',\n        },\n        dates: 'Nov. 2018 - Déc. 2019',\n        title: 'Développeur Fullstack Javascript',\n        summary: `Dans le but de tester et monitorer une application en cours de développement en mode boîte grise, la SNCF Gares et Connexions souhaitait développer un outil de test afin de vérifier les performances, la montée en charge et la cohérence entre les données envoyées en entrée et les données reçues en sortie de cette dernière.`,\n        description: '',\n        bulletPoints: [\n          `Création de modules conteneurisés en entrée et en sortie de l’application (NodeJS, Docker, API REST, WebSockets)`,\n          `Création d’une interface permettant le pilotage l’outil de test (ReactJS, Swagger)`,\n          `Mise en place d’une base de données (InfluxDB)`,\n          `Mise en place d’un tableau de bord pour monitorer les performances de l’application testée (Grafana)`,\n          `Mise en place d’un outil pour valider la montée en charge de notre solution (Gatling)`,\n          `Déploiement, gestion (montée en charge) et monitoring de notre outil déployé sur un cluster Kubernetes (Helm, kubectl, DataDog)`,\n        ],\n        mainTechnos: [\n          'NodeJS',\n          'ReactJS',\n          'ES6',\n          'InfluxDB',\n          'Grafana',\n          'Gatling',\n          'Docker',\n          'Kubernetes',\n          'Helm',\n          'TDD',\n          'Git',\n          'Scrum',\n        ],\n      },\n    ],\n  },\n  {\n    location: {\n      logo: './logoAcsi.png',\n      name: 'ACSI Multimedia',\n      adress: 'Saint-Gratien, France',\n    },\n    dates: 'Fév. 2018 - Mai 2019',\n    title: 'Développeur Stagiaire Java',\n    summary: '',\n    description: '',\n    bulletPoints: [],\n    mainTechnos: '',\n    projects: [\n      {\n        location: {\n          logo: './logoAtcn.png',\n          name: 'SAS ATCN',\n          adress: 'Saint-Gratien, France',\n        },\n        dates: 'Fév. 2018 - Mai 2019',\n        title: 'Développeur Stagiaire Java',\n        summary: '',\n        description: '',\n        bulletPoints: [\n          `Analyse et définition des besoins du Client final`,\n          `Mise en place et configuration d'une Base de Données MySQL : MySQL WorkBench`,\n          `Mise en place d'un Web Service : Serveur Glassfish 5, Back-End JavaEE`,\n          `Migration d'une Base de Données ACCESS 97 vers MySQL : Export de la BDD sous Excel, Création de scripts d'importation dans la nouvelle BDD (Parsing Excel - Apache POI, Validation des données, Import MySQL par Web Service)`,\n          `Mise en place d'une interface graphique : Front-End JavaFX, Système de comptes utilisateurs (Cryptage et stockage des mots de passe dans la BDD, Système de Tokens utilisateurs)`,\n          `Configuration de la communication Front Back (Client Serveur) : Jax-WS, SOAP-XML`,\n          `Mise en place de la création de documents : Fiches de Suivi de Commandes, Bons de Livraisons, etc. (Remplissage de formulaires PDF - API iText)`,\n        ],\n        mainTechnos: [\n          'JavaEE',\n          'Glassfish',\n          'MySQL',\n          'Microsoft Access',\n          'Jax WS',\n          'SOAP',\n          'XML',\n          'PDF',\n        ],\n      },\n    ],\n  },\n];\n\nexport const studies = [\n  {\n    location: {\n      logo: './logoDescartes.png',\n      name: 'Université Paris 5 Descartes',\n      adress: 'Paris, France',\n    },\n    dates: '2012 - 2018',\n    title:\n      'Licence MIAGE (Méthodes Informatiques Appliquées à la Gestion des Entreprises)',\n    description: 'Compétences principales acquises',\n    bulletPoints: [\n      `Langages de programmation : C, Java, C#, Web (HTML, CSS, JavaScript, PHP)`,\n      `Bases de données : PostgreSQL`,\n      `Ingénierie Logicielle`,\n      `Gestion de projets`,\n      `Travail en équipe`,\n    ],\n    mainTechnos: [\n      'Java',\n      'C',\n      'C#',\n      'Javascript',\n      'HTML',\n      'CSS',\n      'PHP',\n      'PostgreSQL',\n    ],\n    projects: [\n      {\n        location: {\n          logo: './logoDescartes.png',\n          name: 'Université Paris 5 Descartes',\n          adress: 'Paris, France',\n        },\n        dates: 'Jan. 2017 - Mai 2017',\n        title: `Développement d'un jeu sur Android (en équipe de 4)`,\n        summary: '',\n        description: '',\n        bulletPoints: [\n          `Analyse et définition des besoins du client`,\n          `Etude de marché`,\n          `Maquettage de l'application`,\n          `Rédaction de la documentation technique : Cahier des Charges, Plan de Développement, Plan de Tests, Cahier de Recette, Guide utilisateurs`,\n          `Planification et mise en place du projet : RedMine (SVN, Gantt, Dépôt de code)`,\n          `Développement de la solution logicielle : Android Studio (SDK), Java : Mise en place de la logique de jeu`,\n        ],\n        mainTechnos: ['Java', 'Android Studio', 'SVN', 'Redmine', 'Gantt'],\n      },\n      {\n        location: {\n          logo: './logoDescartes.png',\n          name: 'Université Paris 5 Descartes',\n          adress: 'Paris, France',\n        },\n        dates: 'Jan. 2016 - Mai 2016',\n        title: `Développement d'un Jeu de Dames sur PC (en équipe de 4)`,\n        summary: '',\n        description: '',\n        bulletPoints: [\n          `Analyse et définition des besoins du client`,\n          `Rédaction de la documentation technique : Cahier des Charges, Plan de Développement, Plan de Tests, Cahier de Recette, Guide utilisateurs`,\n          `Planification et mise en place du projet : RedMine (SVN, Gantt, Dépôt de code)`,\n          `Développement de la solution logicielle : Unity3D : Génération plateau de jeu et pièces, C# : Mise en place de la logique de jeu, Intelligence Artificielle : Algorithme Alpha-Beta, Jeu contre l'ordinateur avec plusieurs niveaux de difficultés`,\n        ],\n        mainTechnos: [\n          'C#',\n          'Unity3D',\n          'Intelligence Artificielle',\n          'SVN',\n          'Redmine',\n          'Gantt',\n        ],\n      },\n    ],\n  },\n  {\n    location: {\n      logo: '',\n      name: 'Lycée Marcel Cachin',\n      adress: 'Saint-Ouen, France',\n    },\n    dates: '2012',\n    title: 'Baccalauréat S',\n    description: '',\n  },\n];\n\nexport const experiences = [\n  {\n    logo: '',\n    name: 'SNCF Gares & Connexions (via Talan Labs)',\n    adress: 'Paris, France',\n    dates: 'Nov. 2018 - Déc. 2019',\n    title: 'Développeur Fullstack Javascript',\n    summary: `Dans le but de tester et monitorer une application en cours de développement en mode boîte grise, la SNCF Gares et Connexions souhaitait développer un outil de test afin de vérifier les performances, la montée en charge et la cohérence entre les données envoyées en entrée et les données reçues en sortie de cette dernière.`,\n    bulletPoints: [\n      `Création de modules conteneurisés en entrée et en sortie de l’application (NodeJS, Docker, API REST, WebSockets)`,\n      `Création d’une interface permettant le pilotage l’outil de test (ReactJS, Swagger)`,\n      `Mise en place d’une base de données (InfluxDB)`,\n      `Mise en place d’un tableau de bord pour monitorer les performances de l’application testée (Grafana)`,\n      `Mise en place d’un outil pour valider la montée en charge de notre solution (Gatling)`,\n      `Déploiement, gestion (montée en charge) et monitoring de notre outil déployé sur un cluster Kubernetes (Helm, kubectl, DataDog)`,\n    ],\n    mainTechnos: ['NodeJS', 'ReactJS'],\n  },\n  {\n    logo: '',\n    name: 'Talan Labs',\n    adress: 'Paris, France',\n    dates: 'Sep. 2018 - Déc. 2019',\n    title: 'Développeur Fullstack Javascript',\n    summary: '',\n    description: `Montée en compétences`,\n    projects: [\n      {\n        logo: '',\n        name: 'SNCF Gares & Connexions (via Talan Labs)',\n        adress: 'Paris, France',\n        dates: 'Nov. 2018 - Déc. 2019',\n        title: 'Développeur Fullstack Javascript',\n        summary: `Dans le but de tester et monitorer une application en cours de développement en mode boîte grise, la SNCF Gares et Connexions souhaitait développer un outil de test afin de vérifier les performances, la montée en charge et la cohérence entre les données envoyées en entrée et les données reçues en sortie de cette dernière.`,\n        bulletPoints: [\n          `Création de modules conteneurisés en entrée et en sortie de l’application (NodeJS, Docker, API REST, WebSockets)`,\n          `Création d’une interface permettant le pilotage l’outil de test (ReactJS, Swagger)`,\n          `Mise en place d’une base de données (InfluxDB)`,\n          `Mise en place d’un tableau de bord pour monitorer les performances de l’application testée (Grafana)`,\n          `Mise en place d’un outil pour valider la montée en charge de notre solution (Gatling)`,\n          `Déploiement, gestion (montée en charge) et monitoring de notre outil déployé sur un cluster Kubernetes (Helm, kubectl, DataDog)`,\n        ],\n        mainTechnos: '',\n      },\n    ],\n    bulletPoints: [\n      `Javascript (NodeJS, ReactJS, ES6)`,\n      `Artisanat logiciel (Extreme Programming, Mob / Pair Programming, Tests Driven Development, Code Review, Git Workflow, Clean Code, Clean Architecture)`,\n      `Agilité (Scrum, Kanban)`,\n      `Intégration et Déploiement continu`,\n    ],\n    mainTechnos: '',\n  },\n  {\n    logo: '',\n    name: 'ACSI Multimedia',\n    adress: 'Saint-Gratien, France',\n    dates: 'Fév. 2018 - Mai 2019',\n    title: 'Développeur Stagiaire Java',\n    summary: '',\n    bulletPoints: [\n      `Analyse et définition des besoins du Client final`,\n      `Mise en place et configuration d'une Base de Données MySQL : MySQL WorkBench`,\n      `Mise en place d'un Web Service : Serveur Glassfish 5, Back-End JavaEE`,\n      `Migration d'une Base de Données ACCESS 97 vers MySQL : Export de la BDD sous Excel, Création de scripts d'importation dans la nouvelle BDD (Parsing Excel - Apache POI, Validation des données, Import MySQL par Web Service)`,\n      `Mise en place d'une interface graphique : Front-End JavaFX, Système de comptes utilisateurs (Cryptage et stockage des mots de passe dans la BDD, Système de Tokens utilisateurs)`,\n      `Configuration de la communication Front Back (Client Serveur) : Jax-WS, SOAP-XML`,\n      `Mise en place de la création de documents : Fiches de Suivi de Commandes, Bons de Livraisons, etc. (Remplissage de formulaires PDF - API iText)`,\n    ],\n    mainTechnos: '',\n  },\n];\n\nexport const education = [\n  {\n    name: 'Université Paris 5 Descartes',\n    dates: '2012 - 2018',\n    adress: 'Paris, France',\n    title:\n      'Licence MIAGE (Méthodes Informatiques Appliquées à la Gestion des Entreprises)',\n    description: `Compétences principales acquises :\n      ✔ Langages de programmation : C, Java, C#, Web (HTML, CSS, JavaScript, PHP)\n      ✔ Bases de données : PostgreSQL\n      ✔ Ingénierie Logicielle\n      ✔ Gestion de projets\n      ✔ Travail en équipe\n    Projets Universitaires :\n    • Développement d'un jeu sur Android (en équipe de 4) : \n      ✔ Analyse et définition des besoins du client\n      ✔ Etude de marché\n      ✔ Maquettage de l'application\n      ✔ Rédaction de la documentation technique : Cahier des Charges, Plan de Développement, Plan de Tests, Cahier de Recette, Guide utilisateurs\n      ✔ Planification et mise en place du projet : RedMine (SVN, Gantt, Dépôt de code)\n      ✔ Développement de la solution logicielle : Android Studio (SDK), Java : Mise en place de la logique de jeu\n    • Développement d'un Jeu de Dames sur PC (en équipe de 4) :\n      ✔ Analyse et définition des besoins du client\n      ✔ Rédaction de la documentation technique : Cahier des Charges, Plan de Développement, Plan de Tests, Cahier de Recette, Guide utilisateurs\n      ✔ Planification et mise en place du projet : RedMine (SVN, Gantt, Dépôt de code)\n      ✔ Développement de la solution logicielle : Unity3D : Génération plateau de jeu et pièces, C# : Mise en place de la logique de jeu, Intelligence Artificielle : Algorithme Alpha-Beta, Jeu contre l'ordinateur avec plusieurs niveaux de difficultés`,\n  },\n  {\n    name: 'Lycée Marcel Cachin',\n    dates: '2012',\n    adress: 'Saint-Ouen, France',\n    title: 'Baccalauréat S',\n    description: '',\n  },\n];\n","import React from 'react';\r\n\r\nimport { Header, About, Experience, Education, Footer } from '.';\r\n\r\nimport { aboutText, jobs, studies, personnalInformations } from '../data';\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <div\r\n      style={{\r\n        backgroundColor: '#212121',\r\n      }}>\r\n      <Header {...personnalInformations} />\r\n    </div>\r\n    <About text={aboutText} />\r\n    <Experience experiences={jobs} />\r\n    <Education education={studies} />\r\n    <div\r\n      style={{\r\n        backgroundColor: '#212121',\r\n        margin: '20px 0 0 0',\r\n      }}>\r\n      <Footer />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Home from './components/Home';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Home />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}